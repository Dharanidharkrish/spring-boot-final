pipeline {
libraries{
lib 'shlib'
lib 'shlib@sonar.groovy'
lib 'shlib@build.groovy'
lib 'shlib@nexus.groovy'
lib 'shlib@gate.groovy'
lib 'shlib@devenvironment.groovy'
lib 'shlib@deploy_dev.groovy'
lib 'shlib@deploy_ansible.groovy'
}

 agent any
   tools{
        maven "Maven"
    }
    stages {
      stage('Start')
            {
                steps
                 { 
                    sendNotifications 'STARTED'
                 }
            }

      stage('clean and build')
            {
                steps{
                    
                sendNotifications 'STARTEDBUILD'
                build 'BUILD'
                 
            }
            }
            /*stage('Approval'){
                steps{
                    timeout(time:3, unit: 'DAYS'){
                       input 'Proceed with next job?'
                      script{
                         emailext mimeType: 'text/html',
                 subject: "[Jenkins]${currentBuild.fullDisplayName}",
                 to: "abhishek.gupta2015a@gmail.com",
                 body: '''<a href="http://18.224.251.223:8080/">click to approve</a>'''

        def userInput = input id: 'userInput',
                              message: 'Let\'s promote?', 
                              submitterParameter: 'submitter',
                              submitter: 'Abhishek',
                              parameters: [
                                [$class: 'TextParameterDefinition', defaultValue: 'sit', description: 'Environment', name: 'env'],
                                [$class: 'TextParameterDefinition', defaultValue: 'k8s', description: 'Target', name: 'target']]

        echo ("Env: "+userInput['env'])
        echo ("Target: "+userInput['target'])
        echo ("submitted by: "+userInput['submitter'])
                      }
                    
                    
                }
            }*/
             stage('SonarQube analysis') {
             environment {
           scannerHome=tool 'sonarScanner'
       }

            steps {
            sendNotifications 'SONAR ANALYSIS STARTED'
              sonar 'Sonar Qube'
            } 
            }
        stage('Quality Gate') {
            steps {
             gate 'GATE'
            }
       }
  
            stage("nexus") {
            steps {
          sendNotifications  'NEXUS STAGE STARTED'
          nexus 'NEXUS'
        }
        }
         stage('Deploy to Development'){
            steps{
            devenvironment 'DEPLOY INTO DEV ENVIROINMENT'
             deploy_development 'deploy_dev'
            }
        }
        stage('Deploy to Ansible Master'){
            steps{
               sendNotifications 'Deploy to Ansible Master'
               deploy_ansible  'deploy_ansible'
            } 
        }
        stage('Deploy to Test Server'){
             steps{
                 sh 'ssh -t -t -i /var/lib/jenkins/.ssh/id_rsa ansadmin@172.31.31.91 "ansible-playbook /opt/playbooks/playfile.yml"'
             }
        }
        stage('Deploy to Performance Server'){
             steps{
                 sh 'ssh -t -t -i /var/lib/jenkins/.ssh/id_rsa ansadmin@172.31.31.91 "ansible-playbook /opt/playbooks/performance.yml"'
             }
        }
        stage('Deploy to Production Server'){
             steps{
                 sh 'ssh -t -t -i /var/lib/jenkins/.ssh/id_rsa ansadmin@172.31.31.91 "ansible-playbook /opt/playbooks/production.yml"'
             }
        }

      
        }
        post{
always{
sendNotifications currentBuild.result
}
}

    }
