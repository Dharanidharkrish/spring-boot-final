pipeline {

/*libraries{
lib 'shlib'
lib 'shlib@sonar.groovy'
}*/

    agent any
    tools{
        maven "Maven"
    }
    stages {
      /*stage('Start')
            {
                steps
                 { 
                    sendNotifications 'STARTED'
                 }
            }*/

      stage('clean and build')
            {
                steps{
                    
                 
                  //sendNotifications 'STARTEDBUILD'
                    sh 'mvn clean package'
                 
            }
            }
            stage('Approval'){
                steps{
                    /*timeout(time:3, unit: 'DAYS'){
                       input 'Proceed with next job?'*/
                      script{
                         emailext mimeType: 'text/html',
                 subject: "[Jenkins]${currentBuild.fullDisplayName}",
                 to: "abhishek.gupta2015a@gmail.com",
                 body: '''<a href="http://18.224.251.223:8080/">click to approve</a>'''

        def userInput = input id: 'userInput',
                              message: 'Let\'s promote?', 
                              submitterParameter: 'submitter',
                              submitter: 'Abhishek',
                              parameters: [
                                [$class: 'TextParameterDefinition', defaultValue: 'sit', description: 'Environment', name: 'env'],
                                [$class: 'TextParameterDefinition', defaultValue: 'k8s', description: 'Target', name: 'target']]

        echo ("Env: "+userInput['env'])
        echo ("Target: "+userInput['target'])
        echo ("submitted by: "+userInput['submitter'])
                      }
                    
                    
                }
            }
       stage('SonarQube analysis') {
            steps {
              withSonarQubeEnv('sonarqube') {
                sh 'mvn sonar:sonar'
              }
            } 
            }
       
  
        }
        /*post{
always{
sendNotifications currentBuild.result
}
}*/

    }
